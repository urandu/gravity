policy_module(gravity, 6.0.0)

gen_require(`
  attribute systemd_unit_file_type;
  role unconfined_r;
  role system_r;
  type var_run_t;
  type setfiles_t;
')

####################################
#
# Declarations
#

attribute_role gravity_roles;
attribute_role gravity_container_roles;

# attribute to share between gravity domains (cluster vs installer)
attribute gravity_domain;

# FIXME: turn gravity_t into a pure domain type
# (add gravity_var_run_t, gravity_runtime_exec_t for process domain).
# Also consider using an attribute (gravity_domain, gravity_container_domain)
# as opposed to attribute_roles to group permissions:
#
# type gravity_t, gravity_domain;
# domain_type(gravity_t)
# role system_r types gravity_t;
# role unconfined_r types gravity_t;
# role system_r types gravity_container_t;
# role unconfined_r types gravity_container_t;
# Do the same for gravity_container_t domain

# gravity cluster domain
type gravity_t, gravity_domain;
type gravity_exec_t;
init_daemon_domain(gravity_t, gravity_exec_t)
can_exec(gravity_t, gravity_exec_t)
role gravity_roles types gravity_t;

# gravity installer domain
type gravity_install_t, gravity_domain;
type gravity_install_exec_t;
init_daemon_domain(gravity_install_t, gravity_install_exec_t)
can_exec(gravity_install_t, gravity_exec_t)
can_exec(gravity_install_t, gravity_install_exec_t)

# state directory
type gravity_home_t;
files_type(gravity_home_t)

# log files
type gravity_log_t;
logging_log_file(gravity_log_t)

# temporary files/directories
type gravity_tmp_t;
files_tmp_file(gravity_tmp_t)

# installer state directory (read/only)
type gravity_install_home_t;
files_type(gravity_install_home_t)

# socket files
type gravity_var_run_t;
files_pid_file(gravity_var_run_t)

# systemd unit files (services)
type gravity_unit_file_t;
systemd_unit_file(gravity_unit_file_t)

# network ports
attribute gravity_port_type;
type gravity_port_t, gravity_port_type;
type gravity_install_port_t, gravity_port_type;
type gravity_agent_port_t, gravity_port_type;
type gravity_vxlan_port_t, gravity_port_type;
type gravity_docker_port_t, gravity_port_type;
type gravity_kubernetes_port_t, gravity_port_type;

#####################################
# Planet
#
container_runtime_domain_template(gravity_container)
type gravity_container_exec_t;
init_daemon_domain(gravity_container_t, gravity_container_exec_t)
can_exec(gravity_container_t, gravity_container_exec_t)
role gravity_container_roles types gravity_container_t;

type gravity_container_home_t;
files_type(gravity_container_home_t)
ubac_constrained(gravity_home_t)

# socket files
type gravity_container_var_run_t;
files_pid_file(gravity_container_var_run_t)

# FIXME: what is this for?
# type gravity_container_devpts_t;
# term_pty(gravity_container_devpts_t)

role gravity_roles types gravity_container_t;

####################################
#
# Local policy
#

admin_pattern(gravity_domain, gravity_home_t)
admin_pattern(gravity_domain, gravity_log_t)
admin_pattern(gravity_domain, gravity_tmp_t)
admin_pattern(gravity_domain, gravity_container_home_t)

corecmd_exec_bin(gravity_domain)
corecmd_exec_shell(gravity_domain)
corecmd_bin_entry_type(gravity_domain)
corecmd_shell_entry_type(gravity_domain)
mount_exec(gravity_domain)
seutil_exec_setfiles(gravity_domain)
container_runtime_exec(gravity_domain)

allow gravity_domain self:fifo_file rw_fifo_file_perms;
allow gravity_domain self:process { setrlimit setpgid ptrace };
allow gravity_domain self:tcp_socket create_socket_perms;
allow gravity_domain self:tcp_socket create_stream_socket_perms;
allow gravity_domain self:unix_dgram_socket { connect create getattr setopt };
allow gravity_domain gravity_exec_t:file { unlink };

# lsblk access /sys/dev/block
dev_read_sysfs(gravity_domain)

# install into /usr/bin and run executables
allow gravity_domain bin_t:dir { add_name write remove_name };
allow gravity_domain bin_t:file { create open write setattr rename unlink };
# create/remove symlinks in /usr/bin/
allow gravity_domain bin_t:lnk_file { unlink create };
# search through user's home to be able to read installer content
userdom_list_user_home_content(gravity_install_t)
userdom_search_user_home_dirs(gravity_install_t)
# read/write to $TMPDIR
files_manage_generic_tmp_files(gravity_domain)
domain_use_interactive_fds(gravity_domain)

# FIXME: this needs to be more specific
#auth_use_nsswitch(gravity_t)
#miscfiles_read_localization(gravity_t)
#allow gravity_t gravity_container_exec_t:file manage_file_perms;
#userdom_user_tmp_filetrans(gravity_t, gravity_tmp_t, dir)

sysnet_dns_name_resolve(gravity_domain)
#selinux_get_enforce_mode(gravity_domain)
selinux_get_enforce_mode(gravity_t)
selinux_get_enforce_mode(gravity_install_t)
gravity_container_exec(gravity_domain)
gravity_container_stream_connect(gravity_domain)

container_manage_lib_files(gravity_domain)
container_manage_lib_dirs(gravity_domain)
container_manage_share_files(gravity_domain)
container_manage_share_dirs(gravity_domain)
container_manage_lib_files(gravity_container_t)
container_manage_lib_dirs(gravity_container_t)
container_manage_share_files(gravity_container_t)
container_manage_share_dirs(gravity_container_t)

files_tmp_filetrans(gravity_domain, gravity_tmp_t, { file dir lnk_file sock_file })

read_files_pattern(gravity_install_t, gravity_install_home_t, gravity_install_home_t)
allow gravity_install_t gravity_install_home_t:file { create };

# installer directory file transitions for writable content
filetrans_pattern(gravity_install_t, gravity_install_home_t, gravity_home_t, { dir }, ".gravity")
filetrans_pattern(gravity_install_t, gravity_install_home_t, gravity_home_t, { file }, "crashreport.tgz")
filetrans_pattern(gravity_install_t, gravity_install_home_t, gravity_log_t, { file }, "gravity-system.log")
filetrans_pattern(gravity_install_t, gravity_install_home_t, gravity_log_t, { file }, "gravity-install.log")
filetrans_pattern(gravity_install_t, gravity_home_t, gravity_unit_file_t, { file }, "gravity-installer.service")
filetrans_pattern(gravity_install_t, gravity_home_t, gravity_var_run_t, { sock_file }, "installer.sock")

filetrans_pattern(gravity_domain, gravity_home_t, gravity_unit_file_t, { file }, "gravity-agent.service")
systemd_unit_file_filetrans(gravity_domain, gravity_unit_file_t, { file lnk_file })
systemd_unit_file_filetrans(gravity_domain, gravity_unit_file_t, { file }, "gravity-agent.service")
manage_sock_files_pattern(gravity_domain, gravity_var_run_t, gravity_var_run_t)
manage_files_pattern(gravity_domain, gravity_unit_file_t, gravity_unit_file_t)

allow gravity_domain gravity_unit_file_t:service manage_service_perms;
allow gravity_container_t gravity_unit_file_t:file rw_file_perms;
allow gravity_container_t gravity_unit_file_t:service manage_service_perms;

systemd_exec_systemctl(gravity_t)
systemd_create_unit_file_lnk(gravity_t)
init_reload_services(gravity_t)
init_status(gravity_domain)
allow gravity_t systemd_unit_file_type:dir { add_name remove_name };
systemd_search_unit_dirs(gravity_domain)
systemd_getattr_unit_dirs(gravity_domain)
systemd_getattr_unit_files(gravity_domain)
# FIXME: should not be necessary with proper transitions
#systemd_read_unit_files(gravity_domain)
# FIXME: these should not be needed as gravity should work with its own services
#init_stop_transient_unit(gravity_domain)
#init_start_transient_unit(gravity_domain)
#init_status_transient_unit(gravity_domain)
#init_stop_transient_unit(gravity_domain)
#init_enable_transient_unit(gravity_domain)
#init_disable_transient_unit(gravity_domain)

# allow bind/rw on kubernetes ports
corenet_tcp_bind_generic_node(gravity_domain)
corenet_udp_bind_generic_node(gravity_domain)
corenet_tcp_connect_http_port(gravity_container_t)
corenet_tcp_bind_generic_node(gravity_container_t)
corenet_udp_bind_generic_node(gravity_container_t)
allow gravity_domain gravity_port_type:tcp_socket { connect name_connect };
allow gravity_domain gravity_port_type:udp_socket { connect };
allow gravity_container_t gravity_port_type:tcp_socket { connect name_connect };
allow gravity_container_t gravity_port_type:udp_socket { connect };

# FIXME: remove me
#corenet_tcp_connect_all_unreserved_ports(gravity_t)
#corenet_tcp_bind_all_unreserved_ports(gravity_t)
#corenet_udp_bind_all_unreserved_ports(gravity_t)
#corenet_tcp_connect_all_unreserved_ports(gravity_container_t)
#corenet_tcp_bind_all_unreserved_ports(gravity_container_t)
#corenet_udp_bind_all_unreserved_ports(gravity_container_t)

optional_policy(`
  corenet_tcp_bind_kubernetes_port(gravity_kubernetes_port_t)
  corenet_tcp_bind_kubernetes_port(gravity_kubernetes_port_t)
  corenet_tcp_sendrecv_kubernetes_port(gravity_kubernetes_port_t)
  corenet_tcp_sendrecv_kubernetes_port(gravity_kubernetes_port_t)
  # allow bind/rw on port 5000
  corenet_tcp_bind_commplex_main_port(gravity_docker_port_t)
  corenet_tcp_sendrecv_commplex_main_port(gravity_docker_port_t)
  # allow bind/rw on port 7001
  corenet_tcp_bind_afs3_callback_port(gravity_kubernetes_port_t)
  corenet_tcp_sendrecv_afs3_callback_port(gravity_kubernetes_port_t)
')

allow gravity_install_t gravity_install_port_t:tcp_socket { listen name_bind };
allow gravity_domain gravity_port_t:tcp_socket { listen name_bind };
allow gravity_domain gravity_agent_port_t:tcp_socket { listen name_bind bind };

# execute ifconfig and access network configuration
sysnet_exec_ifconfig(gravity_domain)
iptables_exec(gravity_domain)
modutils_exec_insmod(gravity_domain)

sysnet_read_config(gravity_domain)
files_search_etc(gravity_domain)
# write access for /etc/modules-load.d/
files_rw_etc_files(gravity_domain)

# FIXME: should not be necessary with proper file transitions
# write systemd unit files under /etc/systemd/system
#allow gravity_domain systemd_unit_file_type:file manage_file_perms;

# RO access to lib/modules/* (preflight checks)
files_load_kernel_modules(gravity_domain)
files_search_kernel_modules(gravity_domain)
files_read_kernel_modules(gravity_domain)
allow gravity_domain self:rawip_socket { getopt setopt create };
# FIXME: allow gravity_domain kernel_t:system module_request
#kernel_request_load_module(gravity_domain)
kernel_read_state(gravity_domain)
kernel_read_network_state(gravity_domain)
kernel_read_all_sysctls(gravity_domain)
#kernel_read_messages(gravity_domain)
kernel_read_messages(gravity_t)
kernel_read_messages(gravity_install_t)

# read process state
domain_read_all_domains_state(gravity_domain)
# log to syslog
#logging_send_syslog_msg(gravity_domain)
logging_send_syslog_msg(gravity_t)
logging_send_syslog_msg(gravity_install_t)


# allow unconfined domain to use gravity
# transition to system role for that
optional_policy(`
  unconfined_run_to(gravity_t, gravity_exec_t)
  unconfined_run_to(gravity_install_t, gravity_exec_t)
  role_transition unconfined_r gravity_exec_t system_r;
')

# FIXME: remove dac_override
#allow gravity_t self:capability { dac_override };
allow gravity_domain self:capability { sys_ptrace sys_resource chown fowner fsetid };

# FIXME: update me
usermanage_domtrans_groupadd(gravity_install_t)
usermanage_domtrans_useradd(gravity_install_t)

#userdom_dontaudit_search_user_home_content(gravity_domain)
# read /home/<user>/.bash_history
userdom_read_user_home_content_files(gravity_domain)

# mount systemd journals inside rootfs
allow gravity_domain gravity_container_home_t:dir mounton;

# allow executing journalctl in gravity domain
# FIXME: figure out the subset of permissions required
#journalctl_exec(gravity_t)
#allow journalctl_t self:capability sys_resource;
#allow journalctl_t self:process setrlimit;
journalctl_domtrans(gravity_domain)

container_runtime_domtrans(gravity_domain)

allow gravity_domain self:netlink_audit_socket create;
allow setfiles_t gravity_home_t:file read;
seutil_read_file_contexts(gravity_domain)
seutil_domtrans_setfiles(gravity_domain)

# FIXME: what are these for?
# allow gravity_t gravity_install_home_t:file { rename unlink write };
# allow gravity_t gravity_install_home_t:sock_file { getattr unlink };
# allow gravity_t gravity_install_home_t:dir { create setattr };

########################################
#
# Planet local policy
#

admin_pattern(gravity_container_t, gravity_container_var_run_t)
admin_pattern(gravity_container_t, gravity_container_home_t)
allow gravity_container_t gravity_home_t:dir { mounton getattr search };
allow gravity_container_t gravity_home_t:file mounton;
allow gravity_container_t gravity_container_home_t:dir mounton;
allow gravity_container_t gravity_container_home_t:file { mounton entrypoint execute };
allow gravity_container_t gravity_home_t:lnk_file read;
allow gravity_container_t gravity_var_run_t:sock_file unlink;
allow gravity_container_t self:capability chown;
neverallow gravity_container_t self:capability dac_override;
allow gravity_container_t self:process getattr;
allow gravity_container_t self:tcp_socket { connect create setopt getopt getattr };
# remove /var/run/planet.socket
allow gravity_container_t var_run_t:sock_file unlink;
init_status(gravity_container_t)

# FIXME: is this inherited from container_runtime_domain?
#corecmd_exec_all_executables(gravity_container_t)
dbus_system_bus_client(gravity_container_t)
# udev monitor
udev_create_kobject_uevent_socket(gravity_container_t)

files_var_filetrans(gravity_container_t, gravity_container_var_run_t, { dir }, "planet")
files_pid_filetrans(gravity_container_t, gravity_container_var_run_t, { sock_file }, "planet.socket")
files_pid_filetrans(gravity_container_t, gravity_container_var_run_t, { file }, "dns.env")

# FIXME: remove me (should be duplicates from container_runtime_domain)
# logging_send_syslog_msg(gravity_container_t)
# sysnet_read_config(gravity_container_t)
# auth_read_passwd(gravity_container_t)
# dev_list_sysfs(gravity_container_t)	# ??
# dev_read_sysfs(gravity_container_t)
# kernel_read_system_state(gravity_container_t)
# kernel_read_net_sysctls(gravity_container_t)
# allow gravity_container_t cgroup_t:dir getattr;
# allow gravity_container_t proc_t:filesystem mount;
# allow gravity_container_t modules_object_t:dir getattr;
# # Okt 28 18:08:05 dmitri-centos-node-0 rootfs/usr/bin/planet[20627]: WARN             Failed to start parent process. error:[process_linux.go:474: container init caused "rootfs_linux.go:58: mounting \"devpts\" to rootfs \"/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs\" at \"/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/dev/pts\" caused \"mkdir /var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/dev/pts: permission denied\""]
# allow gravity_container_t tmpfs_t:dir { add_name create mounton };
# allow gravity_container_t devpts_t:filesystem mount;
# #domain_can_write_kmsg(gravity_container_t)
# allow gravity_container_t kmsg_device_t:chr_file getattr;
# allow gravity_container_t tmpfs_t:filesystem mount;
# allow gravity_container_t tmpfs_t:dir setattr;
# allow gravity_container_t tmpfs_t:file { create mounton };
# allow gravity_container_t tmpfs_t:lnk_file { create };
# # Failed to start parent process. error:[process_linux.go:474: container init caused "rootfs_linux.go:70: creating device nodes caused \"open /var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/dev/sda: permission denied\""]
# allow gravity_container_t tmpfs_t:blk_file { create read setattr write };
# # Failed to start parent process. error:[process_linux.go:474: container init caused "rootfs_linux.go:70: creating device nodes caused \"open /var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/dev/null: permission denied\""]
# # Failed to start parent process. error:[process_linux.go:474: container init caused "rootfs_linux.go:114: reopening /dev/null inside container caused \"Failed to open /dev/null - open /dev/null: permission denied\""]
# allow gravity_container_t tmpfs_t:chr_file { open create getattr setattr write };
# # Failed to start parent process. error:[close exec fds: ensure /proc/self/fd is on procfs: permission denied]
# allow gravity_container_t proc_t:filesystem getattr;
# # Failed to start parent process. error:[setup user: operation not permitted]
# allow gravity_container_t self:capability { setgid setuid sys_ptrace };
# # Okt 28 18:24:30 dmitri-centos-node-0 gravity[25565]: standard_init_linux.go:190: open exec fifo caused "permission denied"
# # Okt 28 18:24:30 dmitri-centos-node-0 gravity[25565]: [ERROR]: failed to initialize container factory
# # Okt 28 18:24:30 dmitri-centos-node-0 gravity[25565]: [ERROR]: container_linux.go:323: open exec fifo for reading caused "open /etc/planet/53c53f50-3ccd-4f59-9e6b-668a90d802fb/exec.fifo: permission denied"
# allow gravity_container_t etc_t:fifo_file { read write open };
# # Failed to start parent process. error:[process_linux.go:474: container init caused "rootfs_linux.go:58: mounting \"/proc\" to rootfs \"/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs\" at \"/proc\" caused \"permission denied\""]
# allow gravity_container_t usr_t:filesystem mount;
# allow gravity_container_t node_t:tcp_socket node_bind;
# allow gravity_container_t tmpfs_t:lnk_file getattr;
# allow gravity_container_t sysfs_t:filesystem mount;
# allow gravity_container_t self:unix_stream_socket connectto;
# fs_relabel_cgroup_dirs(gravity_container_t)
# allow gravity_container_t cgroup_t:file relabelfrom;
# allow gravity_container_t init_t:key { create view setattr };
# allow gravity_container_t unlabeled_t:key create;
# allow gravity_container_t root_t:dir mounton;
# fs_read_cgroup_files(gravity_container_t)
# fs_manage_cgroup_dirs(gravity_container_t)
# fs_manage_cgroup_files(gravity_container_t)
# kernel_read_network_state(gravity_container_t)
# kernel_read_all_sysctls(gravity_container_t)
# kernel_rw_net_sysctls(gravity_container_t)
# kernel_setsched(gravity_container_t)
# kernel_read_all_proc(gravity_container_t)
# kernel_rw_all_sysctls(gravity_container_t)
# domain_use_interactive_fds(gravity_container_t)
# domain_dontaudit_read_all_domains_state(gravity_container_t)
# domain_sigchld_all_domains(gravity_container_t)
# domain_use_interactive_fds(gravity_container_t)
# domain_read_all_domains_state(gravity_container_t)
# domain_getattr_all_domains(gravity_container_t)
# allow gravity_container_t domain:fifo_file rw_fifo_file_perms;
# allow gravity_container_t domain:fd use;
# #allow gravity_container_t self:capability { fsetid sys_admin fowner };
# allow gravity_container_t gravity_container_devpts_t:chr_file { relabelfrom rw_chr_file_perms setattr_chr_file_perms };
# term_create_pty(gravity_container_t, gravity_container_devpts_t)
# term_use_all_ttys(gravity_container_t)
# term_use_all_inherited_terms(gravity_container_t)
# allow gravity_container_t self:udp_socket create;
# allow gravity_container_t self:unix_dgram_socket create;
# allow gravity_container_t devlog_t:sock_file write;

# FIXME: remove me
# # libcontainer state directory (this actually refers to a directory in planet rootfs but
# # SELinux still sees it as /var/run for some reason)
# files_create_var_run_dirs(gravity_container_t)

# FIXME: remove me (rootfs/* should be labeled container_file_t)
# files_etc_filetrans(gravity_container_t, gravity_container_home_t, { dir }, "cni")

# ===============================================
# TODO(dmitri): debugging installer
#
# Warning: state of flux beyond this line
#

# FIXME: find out which syscall is this exactly and place in the code base
# allow gravity_t fs_t:filesystem getattr;

# FIXME: find out if necessary and use macros
# # lsblk
# allow gravity_t udev_var_run_t:file read;
# allow gravity_t tmpfs_t:filesystem getattr; # ??


###########################
# Specific operations
#
# `gravity report`
#systemd_read_journal_files(gravity_t)
# FIXME: /usr/bin/ps
#allow gravity_t http_port_t:tcp_socket name_connect;

# FIXME: /usr/bin/kmod
#allow gravity_t insmod_exec_t:file { execute getattr };

# FIXME
# time->Thu Oct 24 14:28:59 2019
# type=PROCTITLE msg=audit(1571927339.446:20025): proctitle=6970002D64006C696E6B0073686F77
# type=SYSCALL msg=audit(1571927339.446:20025): arch=c000003e syscall=44 success=no exit=-13 a0=3 a1=7ffcb4dd83d0 a2=20 a3=0 items=0 ppid=19075 pid=19098 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="ip" exe="/usr/sbin/ip" subj=system_u:system_r:gravity_t:s0 key=(null)
# type=AVC msg=audit(1571927339.446:20025): avc:  denied  { nlmsg_write } for  pid=19098 comm="ip" scontext=system_u:system_r:gravity_t:s0 tcontext=system_u:system_r:gravity_t:s0 tclass=netlink_route_socket permissive=0
#
# allow gravity_t self:netlink_route_socket nlmsg_write;
# allow gravity_t self:netlink_socket create;
# allow gravity_t self:netlink_xfrm_socket create;

# FIXME
# time->Thu Oct 24 14:28:59 2019
# type=PROCTITLE msg=audit(1571927339.434:20023): proctitle="iptables-save"
# type=SYSCALL msg=audit(1571927339.434:20023): arch=c000003e syscall=59 success=no exit=-13 a0=1689250 a1=7fffca520bf0 a2=0 a3=7fffca51ffe0 items=0 ppid=19090 pid=19091 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="iptables-save" exe="/usr/sbin/xtables-multi" subj=system_u:system_r:gravity_t:s0 key=(null)
# type=AVC msg=audit(1571927339.434:20023): avc:  denied  { execute } for  pid=19091 comm="iptables-save" name="kmod" dev="sda1" ino=16802454 scontext=system_u:system_r:gravity_t:s0 tcontext=system_u:object_r:insmod_exec_t:s0 tclass=file permissive=0
#
# allow gravity_t self:rawip_socket create;

# FIXME
# time->Thu Oct 24 14:28:59 2019
# type=PROCTITLE msg=audit(1571927339.693:20085): proctitle=636174002F7661722F6C6F672F646D657367
# type=SYSCALL msg=audit(1571927339.693:20085): arch=c000003e syscall=2 success=no exit=-13 a0=7ffed4b62eb5 a1=0 a2=1fffffffffff0000 a3=7ffed4b61ba0 items=0 ppid=19075 pid=19143 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="cat" exe="/usr/bin/cat" subj=system_u:system_r:gravity_t:s0 key=(null)
# type=AVC msg=audit(1571927339.693:20085): avc:  denied  { read } for  pid=19143 comm="cat" name="dmesg" dev="sda1" ino=8990274 scontext=system_u:system_r:gravity_t:s0 tcontext=system_u:object_r:var_log_t:s0 tclass=file permissive=0
#
# allow gravity_t var_log_t:file read;

# FIXME: remove me
# allow gravity_container_t tmpfs_t:chr_file read;
# # FIXME: this is probably because rootfs is labeled as gravity_container_home_t(?)
# allow gravity_container_t tmpfs_t:dir write;
# allow gravity_container_t tmpfs_t:lnk_file read;
# allow gravity_container_t tmpfs_t:sock_file write;

# FIXME: why is this here?
# chown /var/lib/gravity/planet/etcd
# allow gravity_container_t gravity_home_t:dir setattr;

# # allow statfs on /sys/fs/cgroup
# # FIXME: use a targeted macro
# #allow gravity_container_t tmpfs_t:filesystem getattr;
# fs_getattr_tmpfs(gravity_container_t)
# allow gravity_container_t tmpfs_t:file write;
# allow gravity_container_t var_run_t:fifo_file { setattr create };
# init_dbus_chat(gravity_container_t)
# init_start_transient_unit(gravity_container_t)

# time->Fri Oct 25 14:10:43 2019
# type=USER_AVC msg=audit(1572012643.689:39826): pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='avc:  denied  { start } for auid=n/a uid=0 gid=0 path="/run/systemd/system/-planet-12e5ea18-79b1-43a1-ad70-8ac56245a62b.scope" cmdline="rootfs/usr/bin/planet start" scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:object_r:systemd_unit_file_t:s0 tclass=service  exe="/usr/lib/systemd/systemd" sauid=0 hostname=? addr=? terminal=?'
# time->Mon Oct 28 18:46:34 2019
# type=USER_AVC msg=audit(1572288394.994:31784): pid=1 uid=0 auid=4294967295 ses=4294967295 subj=system_u:system_r:init_t:s0 msg='avc:  denied  { stop } for auid=n/a uid=0 gid=0 path="/run/systemd/system/-planet-ac9e8b44-6ee3-419f-834f-28cd466601d3.scope" cmdline="rootfs/usr/bin/planet start" scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:object_r:systemd_unit_file_t:s0 tclass=service  exe="/usr/lib/systemd/systemd" sauid=0 hostname=? addr=? terminal=?'
# allow gravity_container_t systemd_unit_file_t:service { start stop };

# FIXME: access to /proc inside the container
# execve("/proc/self/exe")
# allow gravity_container_t tmpfs_t:file { execute execute_no_trans open read };

# time->Fri Oct 25 14:17:01 2019
# type=PROCTITLE msg=audit(1572013021.978:41451): proctitle=726F6F7466732F7573722F62696E2F706C616E657400696E6974
# type=SYSCALL msg=audit(1572013021.978:41451): arch=c000003e syscall=59 success=no exit=-13 a0=7ffdc0d33b60 a1=4e80040 a2=4e80060 a3=7ffdc0d33020 items=0 ppid=20559 pid=20585 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="exe" exe="/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/usr/bin/planet" subj=system_u:system_r:gravity_container_t:s0 key=(null)
# type=AVC msg=audit(1572013021.978:41451): avc:  denied  { execute_no_trans } for  pid=20585 comm="exe" path=2F6D656D66643A72756E635F636C6F6E65643A2F70726F632F73656C662F657865202864656C6574656429 dev="tmpfs" ino=863393 scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:object_r:tmpfs_t:s0 tclass=file permissive=0
#allow gravity_container_t tmpfs_t:file { execute_no_trans };

# FIXME: virt_sandbox_use_sys_admin
# allow sandbox containers to use sys_admin system calls such as mount
# time->Fri Oct 25 14:13:34 2019
# type=PROCTITLE msg=audit(1572012814.470:40570): proctitle=726F6F7466732F7573722F62696E2F706C616E657400696E697439e a3=1000 items=0 ppid=14621 pid=14646 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="exe" exe="/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/usr/bin/planet" subj=system_u:system_r:gravity_container_t:s0 key=(null)
# type=AVC msg=audit(1572012814.470:40570): avc:  denied  { sys_admin } for  pid=14646 comm="exe" capability=21  scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:system_r:gravity_container_t:s0 tclass=capability permissive=0
# allow gravity_container_t fs_t:filesystem { remount unmount getattr };

# FIXME: find out why /proc/1/group is unavailable for reading
# time->Fri Oct 25 14:29:15 2019
# type=PROCTITLE msg=audit(1572013755.155:44308): proctitle=726F6F7466732F7573722F62696E2F706C616E6574007374617274
# type=SYSCALL msg=audit(1572013755.155:44308): arch=c000003e syscall=262 success=yes exit=0 a0=ffffffffffffff9c a1=c00038e030 a2=c0000c3148 a3=100 items=0 ppid=1 pid=8577 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm="planet" exe="/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/usr/bin/planet" subj=system_u:system_r:gravity_container_t:s0 key=(null)
# type=AVC msg=audit(1572013755.155:44308): avc:  denied  { dac_override } for  pid=8577 comm="planet" capability=1  scontext=system_u:system_r:gravity_container_t:s0 tcontext=system_u:system_r:gravity_container_t:s0 tclass=capability permissive=0
# 2421  openat(AT_FDCWD, "/proc/1/cgroup", O_RDONLY|O_CLOEXEC) = -1 EACCES (Permission denied)
#allow gravity_container_t self:capability { dac_override };

# allow gravity_container_t proc_t:filesystem remount;

# allow gravity_container_t gravity_home_t:dir manage_dir_perms;
# allow gravity_container_t gravity_home_t:lnk_file manage_lnk_file_perms;
# allow gravity_container_t gravity_home_t:file { manage_file_perms execute execute_no_trans };

# allow gravity_t gravity_home_t:file { execute execute_no_trans };
# allow gravity_t system_dbusd_t:unix_stream_socket connectto;
# allow gravity_t system_dbusd_t:dbus send_msg;
# allow gravity_t etc_t:dir { write add_name create setattr getattr remove_name rmdir };
# allow gravity_t etc_t:fifo_file create;
# allow gravity_t var_run_t:dir { write remove_name add_name };
# allow gravity_t gravity_container_var_run_t:sock_file unlink;
# allow gravity_t init_t:dbus send_msg;
# allow init_t gravity_t:dbus send_msg;
# allow gravity_t var_run_t:sock_file { create unlink };
# allow gravity_container_t container_runtime_t:unix_stream_socket connectto;


# # Store container state in /var/run/planet/
# #allow gravity_container_t container_var_run_t:dir { add_name remove_name write rmdir getattr setattr };
# allow gravity_container_t var_run_t:file { create open read write mounton unlink };
# allow gravity_container_t var_run_t:fifo_file { open read unlink };
# allow gravity_container_t var_run_t:dir rmdir;
# # FIXME:
# allow gravity_container_t bin_t:file { open read getattr execute unlink };
# allow gravity_container_t init_exec_t:file { open read getattr execute };
# allow gravity_container_t init_t:unix_stream_socket connectto;
# allow gravity_container_t init_t:service stop;
# allow gravity_container_t sysfs_t:filesystem getattr;
# allow gravity_container_t systemd_systemctl_exec_t:file { getattr execute };
# allow gravity_container_t gravity_agent_port_t:tcp_socket name_bind;
# allow gravity_container_t systemd_systemctl_exec_t:file { open read };
# #allow gravity_container_t http_port_t:tcp_socket name_connect;
# allow gravity_container_t init_exec_t:file execute_no_trans;
# # Failed to start parent process. error:[process_linux.go:474: container init caused "rootfs_linux.go:58: mounting \"selinuxfs\" to rootfs \"/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs\" at \"/var/lib/gravity/local/packages/unpacked/gravitational.io/planet/6.1.8-11505/rootfs/sys/fs/selinux\" caused \"permission denied\""]
# allow gravity_container_t sysfs_t:dir mounton;
# allow gravity_container_t systemd_systemctl_exec_t:file execute_no_trans;
# allow gravity_container_t security_t:filesystem remount;

# # allow mounting of /etc/selinux
# allow gravity_t self:capability { sys_chroot sys_admin };
# allow gravity_t selinux_config_t:dir { read mounton };
# fs_mount_all_fs(gravity_t)
# fs_unmount_all_fs(gravity_t)
# allow gravity_t security_t:filesystem unmount;
# # allow relabelfrom on rootfs during installation to comply with SELinux constraint
# domain_obj_id_change_exemption(gravity_t)


#systemd_hostnamed_manage_config(gravity_container_t)

#dbus_exec_dbusd(gravity_t)

#dbus_exec_dbusd(gravity_container_t)
#allow gravity_t self:netlink_route_socket nlmsg_write;

# FIXME: which unit specifically triggers this?
# allow gravity_container_t systemd_unit_file_t:service status;
