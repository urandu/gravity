policy_module(gravity, 6.0.0)

gen_require(`
  attribute systemd_unit_file_type;
  type var_run_t;
  type setfiles_t;
  type container_file_t;
  type container_log_t;
  type container_share_t;
  type container_var_run_t;
  type container_runtime_tmpfs_t;
  type spc_t;
')

####################################
#
# Declarations
#

attribute_role gravity_roles;
attribute_role gravity_container_roles;

# attribute to share between gravity domains (cluster vs installer)
attribute gravity_domain;
# attribute for processes runing inside the planet container
attribute gravity_container_domain;
# attribute for all gravity-specific processes
attribute gravity_executable_domain;

# FIXME: add gravity_var_run_t, gravity_runtime_exec_t for process domain.
# Also consider using an attribute (gravity_domain, gravity_container_domain)
# as opposed to attribute_roles to group permissions:

# gravity cluster domain
type gravity_t, gravity_domain;
type gravity_exec_t, gravity_executable_domain;
init_daemon_domain(gravity_t, gravity_exec_t)
can_exec(gravity_t, gravity_exec_t)
can_exec(gravity_t, gravity_container_file_t)
role gravity_roles types gravity_t;

# state directory
type gravity_home_t;
files_type(gravity_home_t)

# log files
type gravity_log_t;
logging_log_file(gravity_log_t)

# temporary files/directories
type gravity_tmp_t;
files_tmp_file(gravity_tmp_t)

# installer state directory (read/only)
type gravity_install_home_t;
files_type(gravity_install_home_t)

# socket files
type gravity_var_run_t;
files_pid_file(gravity_var_run_t)

# systemd unit files (services)
type gravity_unit_file_t;
systemd_unit_file(gravity_unit_file_t)

# network ports
attribute gravity_port_type;
type gravity_port_t, gravity_port_type;
type gravity_install_port_t, gravity_port_type;
type gravity_agent_port_t, gravity_port_type;
type gravity_vxlan_port_t, gravity_port_type;
type gravity_docker_port_t, gravity_port_type;
type gravity_kubernetes_port_t, gravity_port_type;
corenet_port(gravity_port_t)
corenet_port(gravity_install_port_t)
corenet_port(gravity_agent_port_t)
corenet_port(gravity_vxlan_port_t)
corenet_port(gravity_docker_port_t)
corenet_port(gravity_kubernetes_port_t)

#####################################
#
# Planet
#

container_runtime_domain_template(gravity_container_runtime)
type gravity_container_runtime_exec_t, gravity_executable_domain;
init_daemon_domain(gravity_container_runtime_t, gravity_container_runtime_exec_t)
can_exec(gravity_container_runtime_t, gravity_container_runtime_exec_t)
can_exec(gravity_container_runtime_t, gravity_container_file_t)
role gravity_container_roles types gravity_container_runtime_t;

type gravity_container_home_t;
files_type(gravity_container_home_t)
ubac_constrained(gravity_home_t)

# socket files
type gravity_container_var_run_t;
files_pid_file(gravity_container_var_run_t)

# init process
container_net_domain_template(gravity_container_init)
type gravity_container_init_exec_t, gravity_container_domain, gravity_executable_domain;
init_daemon_domain(gravity_container_init_t, gravity_container_init_exec_t)
can_exec(gravity_container_init_t, gravity_container_init_exec_t)

# kubernetes control plane components
container_net_domain_template(gravity_kubernetes)
type gravity_kubernetes_exec_t, gravity_container_domain, gravity_executable_domain;
init_daemon_domain(gravity_kubernetes_t, gravity_kubernetes_exec_t)
can_exec(gravity_kubernetes_t, gravity_kubernetes_exec_t)

# cluster services
container_net_domain_template(gravity_service)
type gravity_service_exec_t, gravity_container_domain, gravity_executable_domain;
init_daemon_domain(gravity_service_t, gravity_service_exec_t)
can_exec(gravity_service_t, gravity_service_exec_t)
can_exec(gravity_service_t, gravity_container_file_t)

# domain for all not otherwise labeled processes running inside the container
container_net_domain_template(gravity_container)
typeattribute gravity_container_t gravity_container_domain;

type gravity_container_file_t;
files_mountpoint(gravity_container_file_t)
files_associate_rootfs(gravity_container_file_t)
domain_entry_file(gravity_container_t, gravity_container_file_t)

role gravity_roles types gravity_container_runtime_t;

####################################
#
# Local policy
#

admin_pattern(gravity_domain, gravity_home_t)
admin_pattern(gravity_domain, gravity_tmp_t)
admin_pattern(gravity_domain, gravity_container_home_t)
admin_pattern(gravity_domain, gravity_container_file_t)
manage_files_pattern(gravity_domain, gravity_log_t, gravity_log_t)
manage_chr_files_pattern(gravity_domain, gravity_container_file_t, gravity_container_file_t)
manage_blk_files_pattern(gravity_domain, gravity_container_file_t, gravity_container_file_t)

corecmd_exec_bin(gravity_domain)
corecmd_bin_entry_type(gravity_domain)
corecmd_exec_shell(gravity_domain)
corecmd_shell_entry_type(gravity_domain)
mount_domtrans(gravity_domain)
seutil_domtrans_setfiles(gravity_domain)
seutil_domtrans_semanage(gravity_domain)
container_runtime_domtrans(gravity_domain)

allow gravity_domain self:fifo_file rw_fifo_file_perms;
allow gravity_domain self:process { setrlimit setpgid ptrace setsched setkeycreate };
allow gravity_domain self:tcp_socket create_socket_perms;
allow gravity_domain self:tcp_socket create_stream_socket_perms;
allow gravity_domain self:unix_dgram_socket { connect create getattr setopt };

allow gravity_domain gravity_container_init_exec_t:lnk_file { getattr unlink };
allow gravity_domain gravity_container_runtime_exec_t:lnk_file { getattr unlink };
allow gravity_domain gravity_container_t:lnk_file { getattr unlink };
allow gravity_domain gravity_service_exec_t:lnk_file { getattr unlink };
allow gravity_domain gravity_kubernetes_exec_t:lnk_file { getattr unlink };
allow gravity_domain gravity_container_runtime_exec_t:file unlink;

# lsblk access /sys/dev/block
dev_read_sysfs(gravity_domain)
auth_read_passwd(gravity_domain)

# FIXME: enable when the list of directories is settled
#files_dontaudit_search_all_dirs(gravity_domain)
# FIXME: is this still necessary?
# install into /usr/bin and run executables
#allow gravity_domain bin_t:dir { add_name write remove_name };
#allow gravity_domain bin_t:file { create open write setattr rename unlink };
# create/remove symlinks in /usr/bin/
#allow gravity_domain bin_t:lnk_file { unlink create };
# end-of-FIXME

# allow to statfs the state directory
fs_getattr_xattr_fs(gravity_domain)
# search through user's home to be able to read installer content
userdom_list_user_home_content(gravity_domain)
userdom_search_user_home_dirs(gravity_domain)
# read/write to $TMPDIR
files_manage_generic_tmp_files(gravity_domain)
domain_use_interactive_fds(gravity_domain)

sysnet_dns_name_resolve(gravity_domain)
gravity_container_stream_connect(gravity_domain)

container_manage_lib_files(gravity_domain)
container_manage_lib_dirs(gravity_domain)
container_manage_share_files(gravity_domain)
container_manage_share_dirs(gravity_domain)
container_manage_log_files(gravity_domain)
container_manage_files(gravity_domain)
container_manage_dirs(gravity_domain)
fs_getattr_all_fs(gravity_domain)
fs_mount_all_fs(gravity_domain)
fs_unmount_all_fs(gravity_domain)
fs_remount_all_fs(gravity_domain)

files_tmp_filetrans(gravity_domain, gravity_tmp_t, { file dir lnk_file sock_file })

# FIXME: installer home should be read/only
read_files_pattern(gravity_domain, gravity_install_home_t, gravity_install_home_t)
allow gravity_domain gravity_install_home_t:file { create append write unlink };

# installer directory file transitions for writable content
filetrans_pattern(gravity_domain, gravity_install_home_t, gravity_home_t, dir, ".gravity")
filetrans_pattern(gravity_domain, gravity_install_home_t, gravity_home_t, file, "crashreport.tgz")
logging_log_filetrans(gravity_domain, gravity_log_t, file)
filetrans_pattern(gravity_domain, gravity_install_home_t, gravity_log_t, file, "gravity-system.log")
filetrans_pattern(gravity_domain, gravity_home_t, gravity_unit_file_t, file, "gravity-installer.service")
filetrans_pattern(gravity_domain, gravity_home_t, gravity_unit_file_t, file, "gravity-agent.service")
filetrans_pattern(gravity_domain, gravity_home_t, gravity_var_run_t, sock_file, "installer.sock")
filetrans_pattern(gravity_domain, gravity_container_home_t, container_var_lib_t, dir, "registry")
filetrans_pattern(gravity_domain, gravity_container_home_t, container_var_lib_t, dir, "docker")
filetrans_pattern(gravity_domain, gravity_container_home_t, gravity_container_runtime_exec_t, file, "planet")
filetrans_pattern(gravity_domain, gravity_container_home_t, gravity_exec_t, file, "gravity")
systemd_unit_file_filetrans(gravity_domain, gravity_unit_file_t, { file lnk_file })
manage_sock_files_pattern(gravity_domain, gravity_var_run_t, gravity_var_run_t)
manage_files_pattern(gravity_domain, gravity_unit_file_t, gravity_unit_file_t)
files_pid_filetrans(gravity_domain, container_var_run_t, dir, "planet")
files_pid_filetrans(gravity_domain, container_var_run_t, sock_file, "planet.socket")
create_dirs_pattern(gravity_domain, container_var_run_t, container_var_run_t)
delete_dirs_pattern(gravity_domain, container_var_run_t, container_var_run_t)
setattr_dirs_pattern(gravity_domain, container_var_run_t, container_var_run_t)
manage_files_pattern(gravity_domain, container_var_run_t, container_var_run_t)
files_var_lib_filetrans(gravity_domain, gravity_home_t, dir, "gravity")

allow gravity_t container_var_run_t:sock_file { create unlink };
allow gravity_t container_var_run_t:fifo_file { create setattr unlink };
allow gravity_t container_var_run_t:file mounton;
allow gravity_domain gravity_unit_file_t:service manage_service_perms;
allow gravity_container_runtime_t gravity_unit_file_t:file rw_file_perms;
allow gravity_container_runtime_t gravity_unit_file_t:service manage_service_perms;

# execute files inside /var/lib/gravity
allow gravity_t gravity_home_t:file entrypoint;
exec_files_pattern(gravity_domain, gravity_home_t, gravity_home_t)
# execute files inside planet rootfs
allow gravity_t gravity_container_file_t:file entrypoint;
exec_files_pattern(gravity_domain, gravity_container_file_t, gravity_container_file_t)

systemd_exec_systemctl(gravity_domain)
systemd_create_unit_file_lnk(gravity_t)
init_reload_services(gravity_t)
init_status(gravity_domain)
systemd_read_unit_files(gravity_domain)
systemd_search_unit_dirs(gravity_domain)
systemd_getattr_unit_dirs(gravity_domain)
systemd_getattr_unit_files(gravity_domain)

# allow bind/rw on kubernetes ports
corenet_tcp_bind_generic_node(gravity_domain)
corenet_udp_bind_generic_node(gravity_domain)
# allow to connect to AWS metadata endpoint
corenet_tcp_connect_http_port(gravity_domain)
corenet_tcp_connect_http_port(gravity_container_runtime_t)
corenet_tcp_bind_generic_node(gravity_container_runtime_t)
corenet_udp_bind_generic_node(gravity_container_runtime_t)
allow gravity_domain gravity_port_type:tcp_socket { connect name_connect };
allow gravity_domain gravity_port_type:udp_socket { connect };
allow gravity_container_runtime_t gravity_port_type:tcp_socket { connect name_connect };
allow gravity_container_runtime_t gravity_port_type:udp_socket { connect };

optional_policy(`
  corenet_tcp_bind_kubernetes_port(gravity_domain)
  corenet_tcp_connect_kubernetes_port(gravity_domain)
  corenet_tcp_sendrecv_kubernetes_port(gravity_domain)
  # allow bind/connect/recv on port 5000 (bind is used during preflight checks)
  corenet_tcp_bind_commplex_main_port(gravity_domain)
  corenet_tcp_connect_commplex_main_port(gravity_domain)
  corenet_tcp_sendrecv_commplex_main_port(gravity_domain)
  # allow bind/rw on port 7001
  corenet_tcp_bind_afs3_callback_port(gravity_domain)
  corenet_tcp_connect_afs3_callback_port(gravity_domain)
  corenet_tcp_sendrecv_afs3_callback_port(gravity_domain)
')

allow gravity_domain gravity_install_port_t:tcp_socket { listen name_bind };
allow gravity_domain gravity_port_t:tcp_socket { listen name_bind };
allow gravity_domain gravity_agent_port_t:tcp_socket { listen name_bind bind };

# execute ifconfig and access network configuration
sysnet_domtrans_ifconfig(gravity_domain)
iptables_domtrans(gravity_domain)
modutils_exec_insmod(gravity_domain)
usermanage_domtrans_groupadd(gravity_domain)
usermanage_domtrans_useradd(gravity_domain)
journalctl_domtrans(gravity_domain)
container_runtime_domtrans(gravity_domain)
dmesg_domtrans(gravity_domain)
gravity_container_runtime_domtrans(gravity_domain)
# cannot use a named transition as the binary is created by
# first creating a file with a random name and then renaming it to gravity
allow gravity_domain gravity_exec_t:file { create write rename };
corecmd_bin_filetrans(gravity_domain, gravity_exec_t, file)

sysnet_read_config(gravity_domain)
files_search_etc(gravity_domain)
files_search_var_lib(gravity_domain)
files_list_var_lib(gravity_domain)
# write access for /etc/modules-load.d/
files_rw_etc_files(gravity_domain)

# read/only access to lib/modules/* (preflight checks)
files_load_kernel_modules(gravity_domain)
files_search_kernel_modules(gravity_domain)
files_read_kernel_modules(gravity_domain)
allow gravity_domain self:rawip_socket { getopt setopt create };
kernel_read_state(gravity_domain)
kernel_read_network_state(gravity_domain)
kernel_read_all_sysctls(gravity_domain)
kernel_read_messages(gravity_t)

# log to syslog
logging_send_syslog_msg(gravity_t)

# allow unconfined domain to use gravity
optional_policy(`
  gen_require(`
    role unconfined_r;
  ')
  unconfined_run_to(gravity_t, gravity_exec_t)
  role_transition unconfined_r gravity_exec_t system_r;
')

allow gravity_domain self:capability { sys_ptrace sys_admin sys_resource chown fowner fsetid setuid setgid setpcap sys_chroot };
# TODO(dmitri): remove dac_override
# This needs more work as /var/lib/gravity is owned by the service user
# but (some) commands are requiring root
allow gravity_domain self:capability { dac_override dac_read_search };

# mount systemd journals inside rootfs
allow gravity_domain gravity_container_home_t:dir mounton;

allow gravity_domain self:netlink_audit_socket create;
# allow restorecon to relabel /var/lib/gravity
allow setfiles_t gravity_home_t:file read;
selinux_get_enforce_mode(gravity_t)
seutil_read_file_contexts(gravity_domain)
seutil_domtrans_setfiles(gravity_domain)
# bootstrap SELinux configuration when running in gravity domain.
# Should be a no-op but allow to avoid logging denials
seutil_domtrans_loadpolicy(gravity_t)

dontaudit gravity_t gravity_container_runtime_t:process { noatsecure rlimitinh siginh };
allow gravity_t self:netlink_kobject_uevent_socket { getattr create bind setopt };
dbus_system_bus_client(gravity_t)
init_dbus_chat(gravity_t)
init_start_transient_unit(gravity_t)
init_stop_transient_unit(gravity_t)
# start/stop planet scope unit
systemd_start_systemd_services(gravity_t)
fs_rw_tmpfs_files(gravity_t)
fs_manage_cgroup_dirs(gravity_t)
fs_manage_cgroup_files(gravity_t)

# lsblk
fs_getattr_tmpfs(gravity_t)
udev_read_pid_files(gravity_t)

files_mounton_rootfs(gravity_t)
files_unmount_rootfs(gravity_t)
fs_relabelfrom_tmpfs(gravity_t)
allow gravity_t container_share_t:dir mounton;
allow gravity_t container_file_t:dir mounton;
allow gravity_t container_file_t:filesystem { relabelto relabelfrom };
gravity_manage_executable_content(gravity_domain)
allow gravity_domain container_runtime_exec_t:file { setattr unlink };

files_dontaudit_getattr_all_dirs(gravity_domain)
files_dontaudit_getattr_all_files(gravity_domain)
auth_dontaudit_getattr_shadow(gravity_domain)

########################################
#
# Planet local policy
#

##################
# init process
fs_manage_cgroup_dirs(gravity_container_init_t)
fs_manage_cgroup_files(gravity_container_init_t)
fs_mount_cgroup(gravity_container_init_t)
kernel_rw_fs_sysctls(gravity_container_init_t)
dev_read_kmsg(gravity_container_init_t)
dev_write_kmsg(gravity_container_init_t)
allow gravity_container_init_t sysctl_fs_t:file write;
allow gravity_container_init_t gravity_container_home_t:dir { write remove_name setattr };
allow gravity_container_init_t gravity_container_home_t:file { setattr ioctl rename lock unlink };
allow gravity_container_runtime_t gravity_container_init_t:key { view create setattr };
dontaudit gravity_container_runtime_t gravity_container_init_t:process { noatsecure rlimitinh siginh };
allow gravity_container_runtime_t gravity_container_init_t:unix_stream_socket { read write };
allow gravity_container_runtime_t gravity_home_t:file getattr;
allow gravity_container_init_t gravity_home_t:file { getattr read open };
ps_process_pattern(gravity_container_init_t, gravity_container_runtime_t)
allow gravity_container_init_t gravity_container_runtime_t:process { signull sigkill signal sigchld };
init_rw_stream_sockets(gravity_container_init_t)

# FIXME: /run/lock is labeled container_file_t for some reason!!!
allow gravity_container_init_t container_file_t:dir mounton;

# FIXME: verify whether systemd works without this
dev_mounton_sysfs(gravity_container_init_t)
# dev_dontaudit_mounton_sysfs(gravity_container_init_t)

kernel_request_load_module(gravity_container_init_t)
# mknod /run/systemd/inaccessible/{fifo,sock}
allow gravity_container_init_t self:netlink_route_socket nlmsg_write;
allow gravity_container_init_t container_file_t:fifo_file { getattr open create read write };
allow gravity_container_init_t container_file_t:sock_file { setattr create write unlink };
# mount: /rpc/rpc_pipefs - but why is /run(/.*)? is container_file_t?
#allow gravity_container_init_t container_file_t:dir mounton;
allow gravity_container_init_t container_share_t:dir { write add_name };
allow gravity_container_init_t container_share_t:file write;

# FIXME: is this systemd creating the /var/log/journal inside the container?
allow gravity_container_init_t gravity_container_home_t:dir search;
allow gravity_container_init_t gravity_home_t:dir search;

fs_mount_tmpfs(gravity_container_init_t)
# FIXME: verify whether systemd works without this
# remount /sys/fs/cgroup
fs_remount_tmpfs(gravity_container_init_t)
#fs_dontaudit_remount_tmpfs(gravity_container_init_t)

# FIXME: create a custom domain for 'planet agent'
# Maybe use a symlink for the agent part if it works with a cusom label
gravity_container_runtime_domtrans(gravity_container_init_t)
container_runtime_domtrans(gravity_container_init_t)
domtrans_pattern(gravity_container_init_t, gravity_container_file_t, gravity_container_t)
domtrans_pattern(gravity_container_init_t, gravity_kubernetes_exec_t, gravity_kubernetes_t)
domtrans_pattern(gravity_container_init_t, gravity_service_exec_t, gravity_service_t)
domtrans_pattern(gravity_container_init_t, gravity_exec_t, gravity_t)
domtrans_pattern(gravity_container_init_t, container_file_t, gravity_container_t)
# FIXME: need these? it is better to transition to respective domain
can_exec(gravity_container_init_t, gravity_kubernetes_exec_t)
can_exec(gravity_container_init_t, gravity_service_exec_t)
allow gravity_container_init_t gravity_container_file_t:file entrypoint;
#can_exec(gravity_container_init_t, gravity_container_file_t)

ps_process_pattern(gravity_container_init_t, gravity_kubernetes_t)
ps_process_pattern(gravity_container_init_t, gravity_service_t)
ps_process_pattern(gravity_container_init_t, container_runtime_t)
ps_process_pattern(gravity_container_init_t, gravity_container_domain)
ps_process_pattern(gravity_container_init_t, gravity_container_runtime_t)
ps_process_pattern(gravity_container_init_t, gravity_container_file_t)
allow gravity_container_init_t gravity_kubernetes_t:process { signull sigkill signal };
allow gravity_container_init_t gravity_service_t:process { signull sigkill signal };
allow gravity_container_init_t container_runtime_t:process { signull sigkill signal };
allow gravity_container_init_t gravity_container_domain:process { sigstop sigkill signal signull };
allow gravity_container_init_t gravity_container_domain:process2 nnp_transition;

allow gravity_container_init_t gravity_container_home_t:dir { read write open getattr create add_name };
allow gravity_container_init_t gravity_container_home_t:file { create getattr open read write };
allow gravity_container_init_t gravity_container_domain:unix_dgram_socket sendto;
allow gravity_container_init_t gravity_container_domain:unix_stream_socket { connectto read write };
allow gravity_container_init_t self:netlink_audit_socket nlmsg_relay;

# FIXME admin_patterb(files, dirs, chr_files, lnk_files, sock_files, blk_files)
allow gravity_container_init_t gravity_container_file_t:filesystem unmount;
allow gravity_container_init_t gravity_container_file_t:dir { create setattr write add_name remove_name rmdir mounton };
allow gravity_container_init_t gravity_container_file_t:file { getattr setattr open read create write rename unlink };
allow gravity_container_init_t gravity_container_file_t:chr_file { create open read write getattr ioctl lock };
allow gravity_container_init_t gravity_container_file_t:lnk_file { create unlink rename };
allow gravity_container_init_t gravity_container_file_t:blk_file create;
allow gravity_container_init_t gravity_container_file_t:fifo_file { getattr open create read write };
allow gravity_container_init_t gravity_container_file_t:sock_file { getattr setattr open create read write unlink };
allow gravity_container_init_t rpc_pipefs_t:filesystem { mount unmount };
allow gravity_container_init_t proc_t:filesystem unmount;
allow gravity_container_init_t tmpfs_t:filesystem unmount;

# dbus-daemon
allow gravity_container_init_t self:unix_stream_socket { getopt ioctl accept };
allow gravity_container_init_t self:unix_dgram_socket { getopt setopt };

kernel_manage_debugfs(gravity_container_init_t)
kernel_read_ring_buffer(gravity_container_init_t)
# comm=dbus-daemon path=/run/dbus/system_bus_socket
allow gravity_container_domain gravity_container_init_t:unix_stream_socket { accept getopt ioctl };
# end-of-init process

allow gravity_container_init_t gravity_container_file_t:file write;
allow gravity_container_runtime_t gravity_container_file_t:chr_file mmap_file_perms;
allow gravity_container_runtime_t gravity_container_file_t:filesystem { relabelto relabelfrom mount };
allow gravity_container_runtime_t gravity_container_t:key create;

##################
# gravity services
#
allow gravity_service_t gravity_container_home_t:dir { getattr search open read write add_name remove_name create rename rmdir };
allow gravity_service_t gravity_container_home_t:file { getattr create open read append write unlink rename lock };
allow gravity_service_t gravity_home_t:file { getattr read open };
allow gravity_service_t gravity_home_t:dir { getattr search };
allow gravity_service_t container_file_t:sock_file write;
allow gravity_service_t gravity_container_init_t:unix_dgram_socket sendto;
allow gravity_service_t gravity_container_file_t:dir read;
allow gravity_service_t gravity_container_file_t:chr_file { read write ioctl lock open };
allow gravity_service_t gravity_container_file_t:sock_file write;
search_dirs_pattern(gravity_service_t, gravity_container_file_t, gravity_container_file_t)
rw_files_pattern(gravity_service_t, gravity_container_file_t, gravity_container_file_t)
rw_lnk_files_pattern(gravity_service_t, gravity_container_file_t, gravity_container_file_t)
kernel_request_load_module(gravity_service_t)

allow gravity_container_runtime_t gravity_container_domain:unix_dgram_socket sendto;
allow gravity_container_runtime_t gravity_container_init_t:unix_stream_socket ioctl;
allow gravity_container_runtime_t container_runtime_t:unix_stream_socket connectto;

# 'planet agent'
allow gravity_container_runtime_t gravity_home_t:file { open read };
allow gravity_container_runtime_t gravity_container_init_t:unix_stream_socket connectto;

##################
# generic container processes
#
virt_sandbox_net_domain(gravity_container_t)
logging_send_syslog_msg(gravity_container_t)
dev_mounton_sysfs(gravity_container_domain)
fs_mounton_cgroup(gravity_container_domain)
fs_unmount_cgroup(gravity_container_domain)
# /bin/mount mqueue /dev/mqueue -t mqueue
fs_mount_tmpfs(gravity_container_domain)
corenet_unconfined(gravity_container_t)
virt_default_capabilities(gravity_container_t)
kernel_read_messages(gravity_container_t)
#allow gravity_container_domain proc_t:filesystem remount;
# /bin/mount sunrpc /run/rpc_pipefs -t rpc_pipefs
kernel_request_load_module(gravity_container_t)
# execute gravity inside the container in its domain
can_exec(gravity_container_t, gravity_exec_t)
gravity_domtrans(gravity_container_t)

manage_dirs_pattern(gravity_container_domain,  gravity_container_file_t, gravity_container_file_t)
manage_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
manage_lnk_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
manage_sock_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
manage_fifo_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
can_exec(gravity_container_domain, gravity_container_file_t)
allow gravity_container_domain gravity_container_file_t:blk_file setattr;
rw_blk_files_pattern(gravity_container_domain, gravity_container_file_t, gravity_container_file_t)
allow gravity_container_domain gravity_container_file_t:dir mounton;
allow gravity_container_domain gravity_container_file_t:filesystem { getattr remount };

gravity_read_container_files(container_domain)
gravity_search_state(container_domain)

allow gravity_container_domain gravity_container_init_t:unix_stream_socket { accept ioctl };
allow gravity_container_domain gravity_home_t:file open;
allow gravity_container_domain gravity_container_file_t:chr_file { read write getattr ioctl open };
# sys-kernel-config.mount, sys-kernel-debug.mount
gen_require(`
  type configfs_t;
')
allow gravity_container_t configfs_t:filesystem mount;
kernel_mount_debugfs(gravity_container_t)
kernel_unmount_debugfs(gravity_container_t)
fs_unmount_configfs(gravity_container_t)

# ps, top
# allow ps to introspect init
domain_read_all_domains_state(gravity_container_domain)
allow gravity_container_domain domain:process getattr;
# grep, find
allow gravity_container_domain gravity_container_home_t:lnk_file read;
allow gravity_container_domain container_log_t:file { getattr open read };
container_runtime_read_tmpfs_files(gravity_container_domain)
# strace
allow gravity_container_t gravity_container_init_t:process { ptrace signull }; # ??
allow gravity_container_t gravity_container_init_t:dir { read open };
allow gravity_container_t gravity_container_init_t:netlink_audit_socket getattr;
allow gravity_container_init_t gravity_container_t:process { sigchld signull };
allow gravity_container_t gravity_container_runtime_t:process { sigchld signull }; # ??


##################
# Kubernetes components
#
dev_read_kmsg(gravity_kubernetes_t)
kernel_request_load_module(gravity_kubernetes_t)
# gravity_container_read_home(gravity_kubernetes_t)
allow gravity_kubernetes_t gravity_container_home_t:dir { getattr search open read remove_name write };
# kubelet: create /var/lib/kubelet/.*
allow gravity_kubernetes_t gravity_service_t:dir { getattr search };
allow gravity_kubernetes_t gravity_container_file_t:dir { getattr setattr search create remove_name mounton rmdir };
allow gravity_kubernetes_t gravity_container_file_t:file { getattr setattr read open create write unlink rename };
allow gravity_kubernetes_t gravity_container_file_t:sock_file { getattr read open create write rename unlink };
allow gravity_kubernetes_t gravity_container_file_t:chr_file { getattr read open create write ioctl };
allow gravity_kubernetes_t gravity_container_file_t:lnk_file { getattr read open create write ioctl rename unlink };
# append: kube-apiserver, audit.log
allow gravity_kubernetes_t gravity_container_home_t:file { getattr read open create append };
allow gravity_kubernetes_t gravity_container_init_t:dir { getattr search };
allow gravity_kubernetes_t gravity_container_init_t:lnk_file { getattr read open create unlink };
ps_process_pattern(gravity_kubernetes_t, gravity_container_runtime_t)
ps_process_pattern(gravity_kubernetes_t, gravity_container_file_t)
allow gravity_kubernetes_t container_file_t:dir mounton;
# systemd-run --description=Kubernetes systemd probe --scope true
allow gravity_kubernetes_t gravity_container_init_t:file { getattr read open };
allow gravity_kubernetes_t gravity_container_init_t:unix_stream_socket connectto;
# kube-proxy (/var/state/root.cert)
allow gravity_kubernetes_t gravity_home_t:file open;
allow gravity_kubernetes_t gravity_home_t:dir { read create write add_name };
# comm=kube-proxy name=system_bus_socket, kubelet
# FIXME (container_manage_sock_files(gravity_kubernetes_t)?)
allow gravity_kubernetes_t container_file_t:sock_file { getattr create write rename unlink };
allow gravity_kubernetes_t gravity_container_file_t:dir { write add_name };
# read certificates
allow gravity_kubernetes_t gravity_home_t:dir search;
allow gravity_kubernetes_t gravity_home_t:file { getattr read open };
# kubelet
allow gravity_kubernetes_t container_runtime_t:unix_stream_socket connectto;
allow gravity_kubernetes_t gravity_service_t:file { getattr read open };
allow gravity_kubernetes_t gravity_home_t:dir write;
kernel_read_ring_buffer(gravity_kubernetes_t)
container_runtime_read_tmpfs_files(gravity_kubernetes_t)
# kube-apiserver: /var/log/apiserver/audit.log
allow gravity_kubernetes_t gravity_container_home_t:file write;
# kubelet: /proc/<id>
domain_read_all_domains_state(gravity_kubernetes_t)
# kubelet: write /proc/214/oom_score_adj
allow gravity_kubernetes_t container_runtime_t:file write;
# kubelet: write /proc/sys/vm/overcommit_memory
kernel_rw_vm_overcommit_sysctls(gravity_kubernetes_t)
fs_manage_cgroup_dirs(gravity_kubernetes_t)
fs_manage_cgroup_files(gravity_kubernetes_t)
# /usr/bin/mount -t tmpfs tmpfs /var/lib/kubelet/pods/5b1d644c-3b6c-4c6a-9bde-97fa6dc87520/volumes/kubernetes.io~secret/default-to
fs_mount_tmpfs(gravity_kubernetes_t)
fs_unmount_tmpfs(gravity_kubernetes_t)
allow gravity_kubernetes_t gravity_container_home_t:dir { add_name create };
# kubelet: write resolv.conf
allow gravity_kubernetes_t container_share_t:file write;
allow gravity_kubernetes_t container_var_lib_t:file { getattr read open write };
allow gravity_kubernetes_t container_log_t:file { getattr read open };
allow gravity_kubernetes_t gravity_container_home_t:dir rmdir;
allow gravity_kubernetes_t container_runtime_tmpfs_t:dir getattr;
allow gravity_kubernetes_t gravity_container_home_t:lnk_file { getattr create read unlink };
allow gravity_kubernetes_t gravity_home_t:dir getattr;
allow gravity_kubernetes_t spc_t:process sigkill;
can_exec(gravity_kubernetes_t, gravity_container_file_t)
# kubelet: execve /usr/bin/systemd-run
# Maybe labeling /usr/lib/systemd* as init_t was a mistake?
can_exec(gravity_kubernetes_t, gravity_container_init_exec_t)
# lsof
allow gravity_container_domain container_runtime_t:tcp_socket getattr;
allow gravity_container_domain container_runtime_t:unix_dgram_socket getattr;
allow gravity_container_domain container_runtime_t:unix_stream_socket getattr;
allow gravity_container_domain gravity_container_init_t:lnk_file getattr;
allow gravity_container_domain gravity_container_init_t:unix_dgram_socket getattr;
allow gravity_container_domain gravity_container_init_t:unix_stream_socket getattr;
allow gravity_container_domain gravity_container_runtime_t:tcp_socket getattr;
allow gravity_container_domain gravity_container_runtime_t:unix_dgram_socket getattr;
allow gravity_container_domain gravity_container_runtime_t:unix_stream_socket getattr;
dev_read_kmsg(gravity_container_domain)
# usr/lib/systemd/system-generators/systemd-system-update-generator /run/systemd/generator /run/systemd/generator.early /run/systemd
dev_write_kmsg(gravity_container_domain)
# journalctl
allow gravity_container_domain gravity_container_home_t:dir { getattr open read search write add_name remove_name rmdir }; # TODO: rw_dir_perms
allow gravity_container_domain gravity_container_home_t:file { getattr open read create write unlink }; # TODO: rw_file_perms
# systemctl
allow gravity_container_domain gravity_container_init_t:file getattr;
allow gravity_container_domain gravity_kubernetes_t:dir search;
allow gravity_container_domain gravity_service_t:dir search;
allow gravity_container_domain gravity_container_init_t:unix_stream_socket connectto;
# etcdctl-cmd: /run/systemd/journal/socket
allow gravity_container_domain gravity_container_init_t:unix_dgram_socket sendto;

#allow gravity_container_runtime_t gravity_container_domain:key create;
allow gravity_container_runtime_t gravity_container_file_t:key create;

allow gravity_container_runtime_t gravity_container_init_t:unix_dgram_socket sendto;
# start/stop planet scope units
systemd_config_generic_services(gravity_container_runtime_t)
admin_pattern(gravity_container_runtime_t, gravity_container_var_run_t)
admin_pattern(gravity_container_runtime_t, gravity_container_home_t)
admin_pattern(gravity_container_runtime_t, gravity_container_file_t)
manage_chr_files_pattern(gravity_container_runtime_t, gravity_container_file_t, gravity_container_file_t)
manage_blk_files_pattern(gravity_container_runtime_t, gravity_container_file_t, gravity_container_file_t)
files_root_filetrans(gravity_container_runtime_t, gravity_container_file_t, dir_file_class_set)
allow gravity_container_runtime_t gravity_home_t:dir { mounton getattr search };
allow gravity_container_runtime_t gravity_home_t:file mounton;
allow gravity_container_runtime_t gravity_container_home_t:dir mounton;
allow gravity_container_runtime_t gravity_container_home_t:file { mounton entrypoint execute };
allow gravity_container_runtime_t gravity_home_t:lnk_file read;
allow gravity_container_runtime_t gravity_var_run_t:sock_file unlink;
allow gravity_container_runtime_t self:capability chown;
neverallow gravity_container_runtime_t self:capability dac_override;
allow gravity_container_runtime_t self:process getattr;
allow gravity_container_runtime_t self:tcp_socket { connect create setopt getopt getattr };
init_status(gravity_container_runtime_t)
init_stop_transient_unit(gravity_container_runtime_t)

dbus_system_bus_client(gravity_container_runtime_t)
# udev monitor
udev_create_kobject_uevent_socket(gravity_container_runtime_t)

filetrans_pattern(gravity_container_runtime_t, gravity_container_file_t, gravity_service_exec_t, lnk_file, "etcdctl-cmd")
files_pid_filetrans(gravity_container_runtime_t, container_var_run_t, dir, "planet")
files_pid_filetrans(gravity_container_runtime_t, container_var_run_t, sock_file, "planet.socket")

#######################
# gravity uninstall
#
allow gravity_t container_file_t:sock_file { getattr unlink };
allow gravity_t container_log_t:file unlink;
allow gravity_t container_share_t:blk_file { getattr unlink };
allow gravity_t container_share_t:chr_file { getattr unlink };
#allow gravity_t var_lib_t:dir { remove_name write }; # FIXME

#######################
# gravity report
#
# read process state (including attributes)
domain_read_all_domains_state(gravity_domain)
ps_process_pattern(gravity_domain, domain)
# df -i
allow gravity_t configfs_t:dir { list_dir_perms };
# store bits from /etc
allow gravity_t selinux_config_t:dir { list_dir_perms };
# gravity report
# system export-runtime-journal: mount /var/lib/gravity/local/packages/unpacked/gravitational.io/planet/<version>/rootfs/tmp/journal
allow gravity_t gravity_container_file_t:dir mounton;

gen_require(`
  type staff_t;
  role staff_r;
')
gravity_role(staff_r, staff_t)

allow gravity_t init_t:service { disable enable stop };

gen_require(`
  type rpc_pipefs_t;
')
allow gravity_container_domain rpc_pipefs_t:filesystem mount;
allow gravity_container_init_t spc_t:process signull;
allow gravity_container_init_t spc_t:dir search;
allow gravity_container_domain container_runtime_t:process { sigkill signal sigstop }; # ??
allow gravity_container_domain gravity_container_home_t:dir setattr; # ??
allow gravity_container_domain gravity_container_home_t:file setattr; # ??
allow gravity_container_domain gravity_container_init_t:unix_dgram_socket { read write };
allow gravity_container_domain gravity_container_init_t:unix_stream_socket { read write };
allow gravity_container_domain gravity_container_runtime_t:process { sigkill signal sigstop }; # ??
allow gravity_container_domain gravity_home_t:file { getattr read open }; # ??

# FIXME
allow gravity_kubernetes_t gravity_container_init_exec_t:file getattr;

# gravity: /root/.gravity
#allow gravity_domain admin_home_t:dir write;
#allow gravity_domain admin_home_t:file { read_file_perms };
